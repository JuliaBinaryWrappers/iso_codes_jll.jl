# Autogenerated wrapper script for iso_codes_jll for any
export iso_codes_dir

## Global variables
PATH = ""
LIBPATH = ""
LIBPATH_env = "LD_LIBRARY_PATH"
LIBPATH_default = ""

# Relative path to `iso_codes_dir`
const iso_codes_dir_splitpath = ["share", "iso-codes"]

# This will be filled out by __init__() for all products, as it must be done at runtime
iso_codes_dir_path = ""

# iso_codes_dir-specific global declaration
# This will be filled out by __init__()
iso_codes_dir = ""


"""
Open all libraries
"""
function __init__()
    global artifact_dir = abspath(artifact"iso_codes")

    # Initialize PATH and LIBPATH environment variable listings
    global PATH_list, LIBPATH_list
    global iso_codes_dir_path = normpath(joinpath(artifact_dir, iso_codes_dir_splitpath...))

    global iso_codes_dir = iso_codes_dir_path
    # Filter out duplicate and empty entries in our PATH and LIBPATH entries
    filter!(!isempty, unique!(PATH_list))
    filter!(!isempty, unique!(LIBPATH_list))
    global PATH = join(PATH_list, ':')
    global LIBPATH = join(vcat(LIBPATH_list, [joinpath(Sys.BINDIR, Base.LIBDIR, "julia"), joinpath(Sys.BINDIR, Base.LIBDIR)]), ':')

    
end  # __init__()

